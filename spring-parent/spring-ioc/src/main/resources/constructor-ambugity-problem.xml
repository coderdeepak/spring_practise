<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">

	<bean id="customer_id"
		class="org.spring.ioc.basic.constructorinjection.argument.ambiguity.Customer">
		<constructor-arg>
			<value>Deepak</value>
		</constructor-arg>
		<constructor-arg>
			<value>251</value>
		</constructor-arg>
		<constructor-arg>
			<value>35</value>
		</constructor-arg>
	</bean>

<!-- Here we are expecting that 251 is address and 35 is age; Customer class has 2 constructor; In first constructor 2nd argument is age(int) and 3rd is address(String);
	 In first constructor 2nd argument is address(String) and 3rd is age(int);
	 
	 Although we want Spring container to call second constructor but since Spring has capability to convert '251' to String, it invoked fist constructor only
	 Spring container by default converts every passing value to String value.  
	 
	 To solve this problem you can specify type of the value that is being passed. Like this..
	 
	 	<constructor-arg type="java.lang.String">
			<value>Deepak</value>
		</constructor-arg>
		<constructor-arg type="java.lang.String">
			<value>251</value>
		</constructor-arg>
		<constructor-argtype="int">
			<value>35</value>
		</constructor-arg>
	</bean>
	  
  -->


</beans>	
